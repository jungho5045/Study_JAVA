package operator;

public class OperatorEx3 {

	public static void main(String[] args) {
		
		int num1 = 10;
		num1 += 2;
		System.out.println(num1);
		
		/*
		 * 대입연산자와 다른 연산자가 함께 쓰임
		 * 연산자			기능												연산 예
		 * +=			두 항의 값을 더해서 왼쪽 항에 대입합니다.					num1 += 2;
		 * 																num1 = num1 + 2;와 같음
		 * -=			왼쪽 항에서 오른쪽 항을 빼서 그 값을 왼쪽 항에 대입합니다.		num1 -= 2;
		 * 																num1 = num1 - 2;와 같음
		 * *=			두 항의 값을 곱해서 왼쪽 항에 대입합니다.					num1 *= 2;
		 * 																num1 = num1 * 2;와 같음
		 * /=			왼쪽 항을 오른쪽 항으로 나누어 그 몫을 왼쪽 항에 대입합니다.		num1 /= 2;
		 * 																num1 = num1 / 2;와 같음
		 * %=			왼쪽 항을 오른쪽 항으로 나누어 그 나머지를 왼쪽항에 대입합니다.	num1 %= 2;
		 * 																num1 = num1 % 2;와 같음
		 * =====================================================================================
		 * <<=			비트를 왼쪽으로 이동하고 그 값을 왼쪽 항에 대입합니다.			num1 <<= 2;
		 * 																num1 = num1 << 2;와 같음
		 * >>=			비트를 오른쪽으로 이동하고 그 값을 왼쪽 항에 대입합니다.			num1 >>= 2;
		 * 				(왼쪽 채워지는 비트 값은 부호 비트와 동일합니다.)				num1 = num1 >> 2;와 같음
		 * >>>=			비트를 오른쪽으로 이동하고 그 값을 왼쪽 항에 대입합니다.			num1 >>>= 2;
		 * 				(왼쪽에 채워지는 비트 값은 0입니다.)						num1 = num1 >>> 2;와 같음
		 * &=			두 항의 & 비트 연산 후 그 값을 왼쪽 항에 대입합니다.			num1 &= num2;
		 * 																num1 = num1 & num2;와 같음
		 * |=			두 항의 |비트 연산 후 그 값을 왼쪽 항에 대입합니다.				num1 |= num2;
		 * 																num1 = num1 | num2;와 같음
		 * ^=			두 항의 ^비트 연산 후 그 값을 왼쪽 항에 대입합니다.				num1 ^= num2;
		 * 																num1 = num1 ^ num2;와 같음
		 * 
		 */
	}

}
